version: '3.7'

services:
  database-service:
    image: mysql:8
    networks:
      - app-network
    container_name: database-service
    environment:
      MYSQL_DATABASE: cms_db
      MYSQL_ROOT_PASSWORD: password
  backend-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: cms-ddd-architecture
    networks:
      - app-network
    container_name: backend-service
    volumes:
      - .:/app
    environment:
      PORT: 4000
      API_PREFIX: apis
      DATABASE_HOST: database-service
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: password
      DATABASE_NAME: cms_db
    depends_on:
      - database-service
    command: pnpm --filter api-nest-app start:dev
  frontend-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: cms-ddd-architecture
    networks:
      - app-network
    container_name: frontend-service
    volumes:
      - .:/app
    environment:
      PORT: 3000
    depends_on:
      - backend-service
    command: pnpm --filter web-next-app dev
  web-service:
    container_name: app-web-service
    image: nginx:latest
    depends_on:
      - frontend-service
    environment:
    - NGINX_PORT=80
    ports:
      - "8765:80"
    volumes:
      - ./nginx.conf:/app/nginx.conf:ro
    command: ["nginx", "-c", "/app/nginx.conf", "-g", "daemon off;"]
    networks:
      - app-network
networks:
  app-network:
    driver: bridge